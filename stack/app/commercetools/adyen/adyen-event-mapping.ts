import {
  OrderState,
  PaymentState,
  TransactionState,
  TransactionType,
} from "@commercetools/platform-sdk";

type AdyenEventMapping = {
  eventCode: string;
  success: "true" | "false";
  transactionType: TransactionType | null;
  transactionState: TransactionState | null;
  orderState: OrderState | null;
  paymentState: PaymentState | null;
};

// docs for adyen event codes: https://docs.adyen.com/development-resources/webhooks/understand-notifications#default-event-codes

// commercetools provides an (outdated) Adyen integration on GitHub, with a JSON file that can be used as a starting point for this mapping. It contains mappings for transaction types and transaction states, but not for order states and payment states.
// see: https://github.com/commercetools/commercetools-adyen-integration/blob/master/notification/resources/adyen-events.json
const adyenEventMapping: AdyenEventMapping[] = [
  {
    eventCode: "AUTHORISATION",
    success: "false",
    transactionType: "Authorization",
    transactionState: "Pending",
    orderState: "Open",
    paymentState: "Pending",
  },
  {
    eventCode: "AUTHORISATION",
    success: "true",
    transactionType: "Authorization",
    transactionState: "Success",
    orderState: "Confirmed",
    paymentState: "Paid",
  },
  {
    eventCode: "AUTHORISATION_ADJUSTMENT",
    success: "false",
    transactionType: "Authorization",
    transactionState: "Pending",
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "AUTHORISATION_ADJUSTMENT",
    success: "true",
    transactionType: "Authorization",
    transactionState: "Pending",
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "CANCELLATION",
    success: "false",
    transactionType: "CancelAuthorization",
    transactionState: "Failure",
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "CANCELLATION",
    success: "true",
    transactionType: "CancelAuthorization",
    transactionState: "Success",
    orderState: "Cancelled",
    paymentState: null,
  },
  {
    eventCode: "CANCEL_OR_REFUND",
    success: "false",
    transactionType: null,
    transactionState: "Failure",
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "CANCEL_OR_REFUND",
    success: "true",
    transactionType: null,
    transactionState: "Success",
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "CAPTURE",
    success: "false",
    transactionType: "Charge",
    transactionState: "Failure",
    orderState: null,
    paymentState: "Failed",
  },
  {
    eventCode: "CAPTURE",
    success: "true",
    transactionType: "Charge",
    transactionState: "Success",
    orderState: "Confirmed",
    paymentState: "Paid",
  },
  {
    eventCode: "CAPTURE_FAILED",
    success: "true",
    transactionType: "Charge",
    transactionState: "Failure",
    orderState: null,
    paymentState: "Failed",
  },
  {
    eventCode: "PAIDOUT_REVERSED",
    success: "true",
    transactionType: null,
    transactionState: null,
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "REFUND",
    success: "false",
    transactionType: "Refund",
    transactionState: "Failure",
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "REFUND",
    success: "true",
    transactionType: "Refund",
    transactionState: "Success",
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "REFUND_FAILED",
    success: "true",
    transactionType: "Refund",
    transactionState: "Failure",
    orderState: null,
    paymentState: "CreditOwed",
  },
  {
    eventCode: "REFUNDED_REVERSED",
    success: "true",
    transactionType: "Refund",
    transactionState: "Failure",
    orderState: null,
    paymentState: "CreditOwed",
  },
  {
    eventCode: "DEACTIVATE_RECURRING",
    success: "false",
    transactionType: null,
    transactionState: null,
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "CHARGEBACK",
    success: "true",
    transactionType: "Chargeback",
    transactionState: "Success",
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "SECOND_CHARGEBACK",
    success: "false",
    transactionType: "Chargeback",
    transactionState: "Failure",
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "SECOND_CHARGEBACK",
    success: "true",
    transactionType: "Chargeback",
    transactionState: "Success",
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "CHARGEBACK_REVERSED",
    success: "true",
    transactionType: null,
    transactionState: null,
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "NOTIFICATION_OF_CHARGEBACK",
    success: "true",
    transactionType: "Chargeback",
    transactionState: "Pending",
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "NOTIFICATION_OF_FRAUD",
    success: "true",
    transactionType: null,
    transactionState: null,
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "PREARBITRATION_WON",
    success: "false",
    transactionType: "Chargeback",
    transactionState: "Pending",
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "PREARBITRATION_WON",
    success: "true",
    transactionType: "Chargeback",
    transactionState: "Pending",
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "PREARBITRATION_LOST",
    success: "false",
    transactionType: "Chargeback",
    transactionState: "Pending",
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "PREARBITRATION_LOST",
    success: "true",
    transactionType: "Chargeback",
    transactionState: "Pending",
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "REQUEST_FOR_INFORMATION",
    success: "true",
    transactionType: "Chargeback",
    transactionState: "Pending",
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "PAYOUT_EXPIRE",
    success: "true",
    transactionType: null,
    transactionState: null,
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "PAYOUT_DECLINE",
    success: "true",
    transactionType: null,
    transactionState: null,
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "PAYOUT_THIRDPARTY",
    success: "false",
    transactionType: null,
    transactionState: null,
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "PAYOUT_THIRDPARTY",
    success: "true",
    transactionType: null,
    transactionState: null,
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "REFUND_WITH_DATA",
    success: "false",
    transactionType: null,
    transactionState: null,
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "REFUND_WITH_DATA",
    success: "true",
    transactionType: null,
    transactionState: null,
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "HANDLED_EXTERNALLY",
    success: "true",
    transactionType: null,
    transactionState: null,
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "ORDER_OPENED",
    success: "true",
    transactionType: null,
    transactionState: null,
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "ORDER_CLOSED",
    success: "true",
    transactionType: null,
    transactionState: null,
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "PENDING",
    success: "true",
    transactionType: null,
    transactionState: null,
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "PROCESS_RETRY",
    success: "true",
    transactionType: null,
    transactionState: null,
    orderState: null,
    paymentState: null,
  },
  {
    eventCode: "REPORT_AVAILABLE",
    success: "true",
    transactionType: null,
    transactionState: null,
    orderState: null,
    paymentState: null,
  },
];

export default adyenEventMapping;
